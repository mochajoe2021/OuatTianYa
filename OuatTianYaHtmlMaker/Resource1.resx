<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="String1" xml:space="preserve">
    <value>{
    "Author": "三语沫",
    "Title": "[右岸文字]暗恋直女学妹的日子",
    "ChapterCount": 1,
    "Chapters": [
        {
            "Time": "2012-02-03 21:23",
            "Text": "&lt;p&gt;第一次发贴，纯属打发时间，借此把那些不能再现实中倾诉的心路历程倾诉出来。&lt;/p&gt;&lt;p&gt;第一次见到她呢，远在七八年前，那时候她可叱咤风云了，高中的她喜欢穿白色飘逸的长裙，清丽婉约，袅袅婷婷，男生们都为她疯狂，每次她经过我们班的时候我们班那群就像炸开锅般吹口哨，起哄的什么的。&lt;/p&gt;&lt;p&gt;高中的我呢，是个女生眼中帅气的T,男生眼中不伦不类变态的T，融入不了小女生的世界，内向的我也怯于与男生交流，再加上男生大多不怎么接受打扮中性的女生的，所以那时候的我挺孤独的。&lt;/p&gt;&lt;p&gt;晚自习的课间我每天都会出来趴在走廊上的栏杆上透透气，有一天晚上，我突然再次听到男生们十分嘈杂的起哄声，厌恶之余转过身，却一眼撞见小跑而来她的目光，她蓦地停下脚步望着我，我还注意到她还抿紧了嘴唇，清丽的她抿嘴唇的动作在我看来是十分委屈的，很是惹人怜爱，那帮男生噤了声，或者说全世界在我和她短暂对视的时间里都失去了声音。&lt;/p&gt;&lt;p&gt;然而这些画面就像按了按钮般继续飞快动作起来，她恢复了小跑动作，在我身后跑去，而我仍然回过头看着空洞的校园。&lt;/p&gt;&lt;p&gt;在此之前，虽然她很漂亮，但我从未注意到她，可是以后的日子里，我的目光就无法再她身上停止了，每次她经过我们班级上洗手间的时候，我都会假装若无其事地看着她，比如她的头发又留长了，她又换了一个荷叶边的短裙。在学校K歌大赛中仍然默默地关注她，她的歌声不太娴熟但挺动听，直至我高三的时候她谈了恋爱，她和那个男孩站在我们那层楼过道间亲密地交谈，当我看见这场景的时候，我关注她的心就冷了下去，更何况高考这个大敌当前。&lt;/p&gt;&lt;p&gt;时光就这么不经意间悄悄溜走了这么多年，这期间，她的影子早就朦胧，我甚至在大学期间和女生也谈了一场算是轰轰烈烈的恋爱，后来，变成女生的样子后，和男生也谈了不咸不淡的恋爱。这里指变成女生样子，当然是彻底彻底变成女生的样子。&lt;/p&gt;&lt;p&gt;我想，如果高中那会的我，如果看到我现在这副样子，那一定是无法接受的，我以为我一辈子也改变不了。长发，裙子，裤袜，高跟鞋……呵呵，这是T吗，后来有了新词汇，娘T，作出这些改变也是没办法的事情。&lt;/p&gt;&lt;p&gt;家人、朋友，甚至不熟悉的人眼神告诉自己，你该穿得像女人一样了，否则真的很奇怪。&lt;/p&gt;&lt;p&gt;渡过这个过渡期之后，我意外地发现，这个世界豁然开朗了许多，不再被贴上不正常标签，甚至有时候有的女孩会套到我耳边说，“嗨，小雨，你说XX穿成一幅男人婆的模样，以后还能结婚吗。”&lt;/p&gt;&lt;p&gt;面对这个问题我的心还是十分苦涩的，我想，我的从前就是这样被人议论的。&lt;/p&gt;&lt;p&gt;我叫小雨，非常简单的化名，被领导告知要参加那个培训活动的时候，我才发现，其实，七八年前，那场与她的对视没有结束，而是这故事才刚刚开始。&lt;/p&gt;",
            "Readers": [
                {
                    "Time": "2017-03-11 23:26",
                    "Text": "楼主现在怎么样了",
                    "Name": "王芊芊1228"
                },
                {
                    "Time": "2016-11-17 12:13",
                    "Text": "m",
                    "Name": "ty_Mary25"
                }
            ]
        },
        {
            "Time": "2012-02-03 22:15",
            "Text": "第一次见到几年的她（当然这是她的版本的第一次见面，高中那场我与她在走廊上富有浪漫情怀的初遇，早就被这个没良心没记性的娃忘到九霄云外去了。。。）",
            "Readers": [
                {
                    "Time": "2017-03-11 23:26",
                    "Text": "楼主现在怎么样了",
                    "Name": "王芊芊1228"
                },
                {
                    "Time": "2016-11-17 12:13",
                    "Text": "m",
                    "Name": "ty_Mary25"
                }
            ]
        },
        {
            "Time": "2013-02-03 22:15",
            "Text": "test2",
            "Readers": [
                {
                    "Time": "2017-03-11 23:26",
                    "Text": "t",
                    "Name": "test2r1"
                },
                {
                    "Time": "2016-11-17 12:13",
                    "Text": "r2",
                    "Name": "test2r2"
                },
                {
                    "Time": "2016-11-17 12:13",
                    "Text": "r3",
                    "Name": "testr3"
                }
            ]
        }
    ]
}</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="utf-8"/&gt;&lt;title&gt;{0}-{1}&lt;/title&gt;&lt;script type="text/javascript"&gt;var alli=0;function getDocumentTop(){var scrollTop=0,bodyScrollTop=0,documentScrollTop=0;if(document.body){bodyScrollTop=document.body.scrollTop;}
if(document.documentElement){documentScrollTop=document.documentElement.scrollTop;}
scrollTop=(bodyScrollTop-documentScrollTop&gt;0)?bodyScrollTop:documentScrollTop;return scrollTop;}
function getWindowHeight(){var windowHeight=0;if(document.compatMode=="CSS1Compat"){windowHeight=document.documentElement.clientHeight;}else{windowHeight=document.body.clientHeight;}
return windowHeight;}
function getScrollHeight(){var scrollHeight=0,bodyScrollHeight=0,documentScrollHeight=0;if(document.body){bodyScrollHeight=document.body.scrollHeight;}
if(document.documentElement){documentScrollHeight=document.documentElement.scrollHeight;}
scrollHeight=(bodyScrollHeight-documentScrollHeight&gt;0)?bodyScrollHeight:documentScrollHeight;return scrollHeight;}
function fnDate(){var oDiv=document.getElementById("time");var date=new Date();var year=date.getFullYear();var month=date.getMonth();var data=date.getDate();var hours=date.getHours();var minute=date.getMinutes();var second=date.getSeconds();var time=year+"-"+fnW((month+1))+"-"+fnW(data)+" "+fnW(hours)+":"+fnW(minute)+":"+fnW(second);return time;}
function fnW(str){var num;str&gt;=10?num=str:num="0"+str;return num;}
function addData(){var screenHeight=getWindowHeight(),textHeight=screenHeight/3,listObj=document.getElementById("dataList");var len=Math.round(screenHeight/textHeight)||1;alli++;for(var i=0;i&lt;len;i=i+2){var div=document.createElement("div"),txt=document.createElement("p");txt.className='Author';txt.innerHTML=alli+"&lt;br/&gt;"+i+"&lt;br/&gt;"+fnDate()+"&lt;br/&gt;{2}";div.align="left";txt.height=screenHeight;div.appendChild(txt);listObj.appendChild(div);var div=document.createElement("div"),txt=document.createElement("p");txt.className='read';txt.innerHTML=alli+"&lt;br/&gt;"+(i+1)+"&lt;br/&gt;"+fnDate()+"&lt;br/&gt;{3}";div.align="left";txt.height=screenHeight;div.appendChild(txt);listObj.appendChild(div);}}
window.onload=function(){addData();document.body.scrollIntoView();}
window.onscroll=function(){if(getScrollHeight()==getWindowHeight()+getDocumentTop()){addData();}}&lt;/script&gt;&lt;style&gt;p.Chapters{color:#FFECBF;background-color:#FFB200;display:block;visibility:visible;cursor:pointer;margin:0 auto;border:2px solid #FFB200;font-size:2em;text-align:center;}p.Author{color:#FFB200;background-color:#FFECBF;display:block;visibility:visible;cursor:pointer;margin:0 auto;border:10px solid #FFECBF;border-radius:30px;font-size:2em;}p.read{color:#d8a373;background-color:#CCF;display:block;visibility:visible;cursor:pointer;border:10px solid #CCF;border-radius:30px;font-size:2em;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="Chapters"&gt;&lt;p class="Chapters"&gt;&lt;br/&gt;{1} &lt;br/&gt;{0} &lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div id="dataList"&gt;&lt;/div&gt;&lt;center style="display:none"&gt;&lt;/center&gt;&lt;/body&gt;&lt;/html&gt;</value>
  </data>
</root>